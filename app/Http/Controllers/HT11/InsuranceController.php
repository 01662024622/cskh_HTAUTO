<?php

namespace App\Http\Controllers\HT11;

use App\Http\Controllers\Base\ResouceController;
use App\Http\Controllers\Controller;
use App\Models\HT11\FormInsurance;
use App\Models\HT11\Insurance;
use App\Services\HT11\InsuranceService;
use Illuminate\Http\Request;

class InsuranceController extends Controller
{

    public function index()
    {
        $data = Insurance::where('status', 0)->select(['id', 'name'])->get();
        return view('insurance.index')->with('data', $data); // TODO: Change the autogenerated stub
    }

    public function show($id)
    {
        return Insurance::where('id', $id)->where('status', 0)->first();
    }

    public function noInsurance()
    {
        return view('insurance.noInsurance');
    }

    public function edit($id)
    {
        $data= Insurance::where('id',$id)->where('status',0)->first();
//        $data = '{"data":[{"ask":"Đã từng thay thước lái chưa?","number":0,"answer":["Đã thay","Chưa thay"]},{"ask":"Kiểm tra ko có dấu hiệu va chạm a/h chung tới toàn bộ xe?","number":1,"answer":["Bình thường","Không"]},{"ask":"Kiểm tra gầm xe ko có dấu hiệu va chạm a/h tới hệ thống lái?","number":2,"answer":["Bình thường","Không"]},{"ask":"Kiểm tra trục các đăng có rơ lỏng, han gỉ hay bó kẹt?","number":3,"answer":["Có","Không"]},{"ask":"Kiểm tra rô tuyn lái ngoài có bị rơ, gợn?","number":4,"answer":["Có","Không"]},{"ask":"Có rung động hay bất kì gì bất thường không?","number":5,"answer":["Có","Không"]},{"ask":"Có bị nặng lái không?","number":6,"answer":["Có","Không"]},{"ask":"Mức độ tiếng kêu?","number":7,"answer":["Liên tục","Không liên tục"]},{"ask":"Tiếng kêu lục cục hoặc tiếng kêu lạ không?","number":8,"answer":["Có","Không"]},{"ask":"Tình trạng chảy dầu?","number":9,"answer":["Có","Không"]},{"ask":"Kiểm tra cao su che bụi thước lái có bị rách ko?","number":10,"answer":["Có","Không"]},{"ask":"Kiểm tra dầu trợ lực xem có bị mạt bẩn, biến chất?","number":11,"answer":["Có","Không"]},{"ask":"Bơm trợ lực hoạt động bình thường không?","number":12,"answer":["Có","Không"]},{"ask":"Kiểu lốp?","number":13,"answer":["Nguyên bản","Đã thay"]}]}';
        $data = json_decode($data->form,true);
        return view('insurance.form')->with('data', $data)->with('type',$id);

    }
    public function store(Request $request){
        $fillable = ['type','name', 'phone', 'address', 'product', 'bill', 'amount', 'insurance_date', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'
        ];
        $data = $request->only($fillable);
        if ($request->hasFile('file')) {
            $originName = $request->file('file')->getClientOriginalName();
            $fileName = pathinfo($originName, PATHINFO_FILENAME);
            $extension = $request->file('file')->getClientOriginalExtension();
            $fileName = $fileName . '_' . time() . '.' . $extension;

            $request->file('file')->move(public_path('images/insurances'), $fileName);
            $url = asset('images/insurances/' . $fileName);
            $data['file']=$url;
        }
//        return $data;
        FormInsurance::create($data);
        return view('insurance.noInsurance');
    }
}
